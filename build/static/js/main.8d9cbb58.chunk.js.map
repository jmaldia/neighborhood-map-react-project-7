{"version":3,"sources":["keys.js","components/Menu.js","components/GoogleMapComponent.js","App.js","utils/FoursquareAPI.js","serviceWorker.js","index.js"],"names":["keys","APIkey","clientID","clientSecret","Menu","props","menuButtonClass","menuButton","react_default","a","createElement","aria-label","role","className","aria-selected","tabIndex","onChange","event","filterLocations","target","value","results","map","location","index","infoClass","infoOn","concat","key","id","onClick","showInfo","onKeyPress","enterKeyPressed","name","src","photoSrc","width","alt","address","city","state","postalCode","crossStreet","categories","delivery","href","url","MapComponent","withScriptjs","withGoogleMap","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","markerResults","filter","marker","isVisible","position","clickMarker","animation","isOpen","GoogleMapComponent","Object","assign","this","googleMapURL","loadingElement","style","height","containerElement","mapElement","Component","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closeAllInfoWindow","setState","prevState","markers","locations","resultsMarkers","bind","assertThisInitialized","menuButtonForMobile","_this2","fetch","then","res","json","data","meta","errorType","response","venues","console","log","errorDetail","searchResults","forEach","venueId","photos","items","suffix","photoURL","filteredLocations","catch","err","_this3","locationHere","find","keyCode","which","markerMap","filteredMarkers","_this4","enterKeyPressedMobile","components_Menu","components_GoogleMapComponent","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d9cbb58.chunk.js","sourcesContent":["export const keys = {\n    googleMaps: {\n        APIkey: 'AIzaSyD2Ow6iH0zHR4v1KFvp96IS2owFoYTWta0'\n    }, \n    fourSquare: {\n        clientID: 'KOD25YODVKYQQKKWHFSJQMJAJVZZKGKMGPPPWGHSD4SNOZW5', \n        clientSecret: 'MEEYAH1RZUJCTDVPYWYRSRC00Y2AKSYCGGFODQPUTX0AW1GH'\n    }\n}","import React from 'react';\nimport '../App.css'\n\nconst Menu = props => {\n    let menuButtonClass = props.menuButton ? 'Menu Menu-button-on' : 'Menu Menu-button-off'\n\n    return(\n        <div aria-label=\"Sidebar Menu\" role=\"Menu\" className={menuButtonClass} >\n            <header>\n                <h2>THE SPOTS</h2>\n            </header>\n\n            <div aria-label=\"Category Filter\" role=\"Option\" aria-selected className=\"Filter\">\n                <select \n                    className=\"Filter-dropdown\" \n                    tabIndex=\"2\"\n                    onChange={(event) => props.filterLocations(event.target.value)}\n                >\n                    <option value=\"All\">All Locations</option>\n                    <option value=\"New American Restaurant\">American Restaurants</option>\n                    <option value=\"Asian Restaurant\">Asian Restaurants</option>\n                    <option value=\"Bagel Shop\">Bagel Spots</option>\n                    <option value=\"Bistro\">Bistros</option>\n                    <option value=\"Breakfast Spot\">Breakfast Spots</option>\n                    <option value=\"Fried Chicken Joint\">Chicken Spots</option>\n                    <option value=\"Coffee Shop\">Coffee Spots</option>\n                    <option value=\"Cuban Restaurant\">Cuban Restaurant</option>\n                    <option value=\"Deli / Bodega\">Deli/Bodega Spots</option>\n                    <option value=\"Dessert Shop\">Dessert Spots</option>\n                    <option value=\"Donut Shop\">Donut Spots</option>\n                    <option value=\"Falafel Restaurant\">Falafel Restaurants</option>\n                    <option value=\"Greek Restaurant\">Greek Restaurants</option>\n                    <option value=\"Ice Cream Shop\">Ice Cream Spots</option>\n                    <option value=\"Irish Pub\">Irish Restaurants</option>\n                    <option value=\"Italian Restaurant\">Italian Restaurants</option>\n                    <option value=\"Mexican Restaurant\">Mexican Restaurants</option>\n                    <option value=\"Sushi Restaurant\">Sushi Restaurants</option>\n                </select>\n            </div>\n\n            <ol aria-label=\"List of Locations\" >\n                {\n                    props.results.map((location, index) => {\n                        let infoClass = location.infoOn ? 'Places-height-tl' : 'Places-height-sh'\n                        \n                        return (\n                            <li \n                                className={`Places ${infoClass}`} \n                                tabIndex={index + 2}\n                                key={location.id} \n                                onClick={ () => props.showInfo(location) }\n                                onKeyPress={ (event) => props.enterKeyPressed(event, location) }\n                            >\n                                <h3>{location.name}</h3> \n                                <div aria-label=\"Location Image\" className=\"Places-image\">   \n                                    <img src={location.photoSrc ? location.photoSrc : \"https://imgplaceholder.com/300x300/8ec9ee/ffffff?text=Sorry+the_br_image+for_br_this+location_br_is+not+available\"} width=\"100\" alt={location.name}></img>\n                                </div>\n                                <div aria-label=\"Location Information\" className=\"Places-info\">\n                                    <div aria-label=\"Location Address\" className=\"Places-address\">\n                                        <p>{location.location.address}</p>\n                                        <p>{location.location.city}, {location.location.state} {location.location.postalCode}</p>\n                                    </div>\n                                    <div aria-label=\"Location Cross Street\" className=\"Places-cross-street\">\n                                        { location.location.crossStreet && <p>Cross Street(s): {location.location.crossStreet}</p> }\n                                    </div>\n                                    <div aria-label=\"Location Category\" className=\"Places-category\">\n                                        <p>Category: { location.categories ? <span>{location.categories[0].name}</span> : 'Uncategorized' }</p>\n                                    </div>\n                                    <div aria-label=\"Delivery Information\" className=\"Places-delivery\">\n                                        <p>{ location.delivery ? <a tabIndex=\"-1\"  href={location.delivery.url}>Order Now</a> : 'Delivery not available'}</p>\n                                    </div>\n                                    \n                                </div>\n                            </li>\n                        )\n                    })\n                }\n            </ol> \n        </div>\n    )\n}\n\nexport default Menu","// global google\nimport React, { Component } from 'react'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nimport { keys } from '../keys';\nimport '../App.css'\n\nconst MapComponent = withScriptjs(withGoogleMap(props =>\n  <GoogleMap\n    defaultZoom={15}\n    zoom={15}\n    defaultCenter={{ lat: 40.8257712, lng: -74.1074718 }}\n    center={{ lat: 40.8257712, lng: -74.1074718 }}\n  >\n    { \n        props.markerResults && props.markerResults.filter(marker => marker.isVisible).map((marker) => (\n            <Marker \n                key={`m-${marker.id}`} \n                aria-label=\"Marker\"\n                position={{ lat: marker.lat, lng: marker.lng }} \n                onClick={() => props.clickMarker(marker) }\n                animation={marker.animation}\n            >\n                { marker.isOpen && (\n                    <InfoWindow>\n                        <h3>{marker.name}<br />{marker.address}</h3>\n                    </InfoWindow>\n                )}\n            </Marker>\n        ))\n    }\n  </GoogleMap>\n))\n\n// function gm_authFailure() { \n//     console.log('Sorry, there was an issue with Google Maps. Please try again later.')\n//  }\n\nclass GoogleMapComponent extends Component {\n    \n    render() {\n        return (\n            <MapComponent\n                {...this.props}\n                aria-label=\"Map\"\n                googleMapURL={`https://map.googleapis.com/maps/api/js?v=3.exp&key=${keys.googleMaps.APIkey}`}\n                loadingElement={<div style={{ height: `100%`,  width: `100%` }} />}\n                containerElement={<div style={{ height: `100vh`, width: `100%` }} />}\n                mapElement={<div style={{ height: `100%`, width: `100%` }} />}\n            />\n        )\n    }\n}\n\nexport default GoogleMapComponent","import React, { Component } from 'react';\nimport * as FoursquareAPI from './utils/FoursquareAPI'\n\nimport Menu from './components/Menu'\nimport GoogleMapComponent from './components/GoogleMapComponent'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      locations: [],\n      results: [], \n      markers: [], \n      resultsMarkers: [], \n      categories: [],\n      menuButton: false\n    } \n\n    this.showInfo = this.showInfo.bind(this)\n    this.clickMarker = this.clickMarker.bind(this)\n    this.closeAllInfoWindow = this.closeAllInfoWindow.bind(this)\n    this.filterLocations = this.filterLocations.bind(this)\n    this.enterKeyPressed = this.enterKeyPressed.bind(this)\n    this.menuButtonForMobile = this.menuButtonForMobile.bind(this)\n  }\n\n  componentDidMount() {\n    FoursquareAPI.search().then(searchResults => {\n      // Creates an array or markers for the map\n      const markers = searchResults.map(location => {\n        return {\n          id: location.id,\n          name: location.name, \n          address: location.location.address,\n          categories: location.categories[0].name, \n          lat: location.location.lat, \n          lng: location.location.lng, \n          isOpen: false, \n          isVisible: true,\n          animation: 0\n        }\n      })\n      \n      // Adds a photo URL to each location\n      searchResults.forEach(location => {\n        FoursquareAPI.getPhoto(location.id)\n          .then(photoURL => {\n            location.photoSrc = photoURL\n            this.setState((prevState) => ({\n                locations: prevState.locations.filter(filteredLocations => filteredLocations.id !== location.id).concat([location])\n            }))\n          }).catch(err => console.log(err))\n      }) \n\n      // Sets initial values for state\n      this.setState({ \n        locations: searchResults, \n        results: searchResults,\n        markers, \n        markerResults: markers\n      }) \n    })\n  }\n\n  // Shows more information about the location on the side menu\n  // Also opens the infowindow on the marker\n  showInfo(location) {\n    this.state.locations.forEach(locationHere => {\n      if (locationHere.id === location.id && !location.infoOn) {\n        location.infoOn = !location.infoOn\n        this.clickMarker(this.state.markers.find(marker => {\n          // Adds animation to marker when location is clicked\n          if (location.id === marker.id) {\n            marker.animation = 2\n            return marker\n          } else {\n            return null\n          }\n        }))\n      } else if (locationHere.id === location.id && location.infoOn) {\n        location.infoOn = !location.infoOn\n        this.closeAllInfoWindow()\n      }  else {\n        locationHere.infoOn = false\n      }\n    })\n    \n    this.setState((prevState) => ({ \n      locations: prevState.locations,\n      markers: prevState.markers\n    }))\n  }\n\n  // For a11y - simulates click when location is focused and enter key pressed\n  enterKeyPressed(event, location) {\n    let code = event.keyCode || event.which;\n    if(code === 13) { \n      this.showInfo(location)\n    } \n  }\n\n  enterKeyPressedMobile(event) {\n    let code = event.keyCode || event.which;\n    if(code === 13) { \n      this.menuButtonForMobile()\n    }\n  }\n\n  // When menu button is clicked, the menu is shown\n  menuButtonForMobile() {\n    this.setState({ menuButton: !this.state.menuButton })\n  }\n\n  // Shows infoWindow for only selected marker\n  clickMarker = (marker) => {\n    this.closeAllInfoWindow()\n    marker.isOpen = true\n\n    this.setState((prevState) => ({ markers: prevState.markers }))\n  }\n  \n  // Closes all the infoWindow - helper\n  closeAllInfoWindow() {\n    this.state.markers.forEach(markerMap => {\n      markerMap.isOpen = false\n    })\n    this.setState((prevState) => ({ markers: prevState.markers }))\n  }\n\n  // Function called by dropdown to filter by category\n  filterLocations(value) {\n    let filteredLocations \n    let filteredMarkers\n\n    // Code to filter menu and markers\n    if (value === 'All') {\n      console.log(this.state.markers)\n      filteredLocations = this.state.locations\n      filteredMarkers = this.state.markers\n    } else {\n      filteredLocations = this.state.locations.filter(location => location.categories[0].name === value)\n      filteredMarkers = this.state.markers.filter(marker => {\n        if (marker.categories === value){\n          console.log(marker.categories)\n          return marker\n        } else {\n          return null\n        }\n      \n      })\n    }\n\n    this.setState({ \n      results: filteredLocations,\n      markerResults: filteredMarkers\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <header className=\"App-header\">\n          <h3 onClick={this.showInfo}>RutherFood</h3>\n        </header>\n\n        <div \n          tabIndex=\"1\"\n          className=\"Menu-button\"\n          aria-label=\"Menu\" \n          role=\"Menu\" \n          onClick={this.menuButtonForMobile}\n          onKeyPress={ (event) => this.enterKeyPressedMobile(event) }\n        >\n          Menu\n        </div>\n\n        <div className=\"Map-area\" style={{ height: '100vh', width: '100%' }}>\n          <Menu \n            {...this.state}\n            showInfo={this.showInfo}\n            enterKeyPressed={this.enterKeyPressed}\n            filterLocations={this.filterLocations}\n          />\n\n          <GoogleMapComponent\n            {...this.state}\n            className=\"Google-maps\"\n            clickMarker={this.clickMarker}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App","import { keys } from '../keys.js'\n\nconst url = \"https://api.foursquare.com/v2/venues/\"\nconst lng = \"40.8257712\"\nconst lat = \"-74.1074718\"\nconst categoryId = \" 4d4b7105d754a06374d81259\"\nconst radius = 600\nconst version = \"20181016\"\n\n\nexport const search = () =>\n  fetch(`${url}search?ll=${lng},${lat}&client_id=${keys.fourSquare.clientID}&client_secret=${keys.fourSquare.clientSecret}&v=${version}&categoryId=${categoryId}&radius=${radius}`)\n    .then(res => res.json())\n    .then(data => {\n        if (data.meta.errorType) {\n            console.log(`Uh oh. Something happened. \\nError: ${data.meta.errorDetail}`)\n        } else {\n            return data.response.venues\n        }\n    })\n\n\nexport const getPhoto = (venueId) =>\n    fetch(`https://api.foursquare.com/v2/venues/${venueId}/photos?limit=1&client_id=${keys.fourSquare.clientID}&client_secret=${keys.fourSquare.clientSecret}&v=${version}`)\n        .then(res => res.json())\n        .then(data => {  \n            if (data.meta.errorType) {\n                console.log(`Uh oh. Something happened. \\nError: ${data.meta.errorDetail}`)\n            } else {\n                return `https://igx.4sqi.net/img/general/300x300${data.response.photos.items[0].suffix}`\n            }\n        })","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}