FROM App.js





  // static defaultProps = {
  //   center: {
  //     lat: 40.8257712,
  //     lng: -74.1074718
  //   },
  //   zoom: 16.5
  // }


// const AnyReactComponent = ({ text }) => <div>{text}</div>
// <AnyReactComponent
// lat={this.props.center.lat}
// lng={this.props.center.lng}
// />


// import GoogleMapReact from 'google-map-react'
// <GoogleMapReact
    //   bootstrapURLKeys={{ key: keys.googleMaps.APIkey }}
    //   defaultCenter={this.props.center}
    //   defaultZoom={this.props.zoom}
    //   // onGoogleApiLoaded={({map, maps}) => { this.renderMarkers(map, maps) }}
    //   yesIWantToUseGoogleMapApiInternals={true}
    // >
    // </GoogleMapReact>






  

    // this.renderMarkers = this.renderMarkers.bind(this)
    // this.clickNameToShowInfo = this.clickNameToShowInfo.bind(this)
  // renderMarkers(map, maps) {
  //   let infowindow = new maps.InfoWindow()
  //   this.state.locations.forEach(location => {
  //     infowindow = {
  //       content: `<h1>${location.name}</h1>
  //                 <h3>${location.location.address}</h3>`
  //     }

  //     marker = new maps.Marker({
  //       position: {
  //         lat: location.location.lat, 
  //         lng: location.location.lng
  //       },
  //       map,
  //       animation: maps.Animation.DROP
  //     })

  //     marker.addListener(marker, 'click', (marker) => {
  //       infowindow.open(map, marker)

  //       if (marker.getAnimation() !== null) {
  //         marker.setAnimation(null);
  //       } else {
  //         marker.setAnimation(maps.Animation.BOUNCE);
  //       }
  //     })

  //     marker.id = location.id

  //     this.setState((prevState) => ({
  //       markers: prevState.markers.filter(filteredMarkers => filteredMarkers.id !== marker.id).concat([marker])
  //     }))

  //     return marker
  //   })

  //   maps.event.addListener(map, 'click', function() {
  //     infowindow.close()
  //   })
  // }

  // clickNameToShowInfo(id) {
  //   this.state.markers.forEach(filteredMarker => {
  //     if (filteredMarker.id === id) {
  //       // filteredMarker.map.trigger(filteredMarker.id, 'click')
  //       // filteredMarker.trigger(filteredMarker, 'click');
  //       console.log(filteredMarker.__e3_.click)
  //       return filteredMarker.id
  //     }
  //   })
  // }


  FROM MENU


// add to LI later > <img src={this.props.photo} width="100" alt="my restaurant"></img>
// { location.location.formattedAddress.map(addr => <p>{addr}</p>) }
//onClick={this.props.click}

// <div className="Places-image">   
//     <img src={location.photoSrc} width="100" alt={location.name}></img>
// </div>
// <div className="Places-info">
//     <h3>{location.name}</h3>
//     <p>{location.location.address}</p>
// </div>